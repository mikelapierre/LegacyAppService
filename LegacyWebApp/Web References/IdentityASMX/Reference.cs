//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace LegacyWebApp.IdentityASMX {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IdentityServiceSoap", Namespace="http://legacyasmxapp/")]
    public partial class IdentityService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetHeadersAndClaimsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IdentityService() {
            this.Url = global::LegacyWebApp.Properties.Settings.Default.LegacyWebApp_IdentityASMX_IdentityService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetHeadersAndClaimsCompletedEventHandler GetHeadersAndClaimsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://legacyasmxapp/GetHeadersAndClaims", RequestNamespace="http://legacyasmxapp/", ResponseNamespace="http://legacyasmxapp/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ValueTupleOfArrayOfValueTupleOfStringStringArrayOfValueTupleOfStringString GetHeadersAndClaims() {
            object[] results = this.Invoke("GetHeadersAndClaims", new object[0]);
            return ((ValueTupleOfArrayOfValueTupleOfStringStringArrayOfValueTupleOfStringString)(results[0]));
        }
        
        /// <remarks/>
        public void GetHeadersAndClaimsAsync() {
            this.GetHeadersAndClaimsAsync(null);
        }
        
        /// <remarks/>
        public void GetHeadersAndClaimsAsync(object userState) {
            if ((this.GetHeadersAndClaimsOperationCompleted == null)) {
                this.GetHeadersAndClaimsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHeadersAndClaimsOperationCompleted);
            }
            this.InvokeAsync("GetHeadersAndClaims", new object[0], this.GetHeadersAndClaimsOperationCompleted, userState);
        }
        
        private void OnGetHeadersAndClaimsOperationCompleted(object arg) {
            if ((this.GetHeadersAndClaimsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHeadersAndClaimsCompleted(this, new GetHeadersAndClaimsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://legacyasmxapp/")]
    public partial class ValueTupleOfArrayOfValueTupleOfStringStringArrayOfValueTupleOfStringString {
        
        private ValueTupleOfStringString[] item1Field;
        
        private ValueTupleOfStringString[] item2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ValueTupleOfStringString[] Item1 {
            get {
                return this.item1Field;
            }
            set {
                this.item1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ValueTupleOfStringString[] Item2 {
            get {
                return this.item2Field;
            }
            set {
                this.item2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://legacyasmxapp/")]
    public partial class ValueTupleOfStringString {
        
        private string item1Field;
        
        private string item2Field;
        
        /// <remarks/>
        public string Item1 {
            get {
                return this.item1Field;
            }
            set {
                this.item1Field = value;
            }
        }
        
        /// <remarks/>
        public string Item2 {
            get {
                return this.item2Field;
            }
            set {
                this.item2Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetHeadersAndClaimsCompletedEventHandler(object sender, GetHeadersAndClaimsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHeadersAndClaimsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHeadersAndClaimsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ValueTupleOfArrayOfValueTupleOfStringStringArrayOfValueTupleOfStringString Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ValueTupleOfArrayOfValueTupleOfStringStringArrayOfValueTupleOfStringString)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591